import ctypes


invalid_seckeys = [
    b"\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xba\xae\xdc\xe6\xafH\xa0;\xbf\xd2^\x8c\xd06AA",  # curve order
    b"\x00" * 32,  # null

]
invalid_seckey_length = [
    31 * b"\x00",  # too short
    33 * b"\x00",  # too long
]

invalid_pubkey_serialization_length = [
    # correct is 33 for compressed and 65 for uncompressed and hybrid
    b"\x01" * 32,
    b"\x01" * 34,
    b"\x01" * 64,
    b"\x01" * 66,
]

invalid_pubkey_length = [
    ctypes.create_string_buffer(63),  # too short
    ctypes.create_string_buffer(65),  # too long
]

invalid_signature_length = invalid_pubkey_length  # both must be 64 bytes

invalid_compact_sig_length = [
    63 * b"\x01",
    65 * b"\x01",
]

invalid_xonly_pubkey_length = invalid_seckey_length

invalid_keypair_length = [
    ctypes.create_string_buffer(95),  # too short
    ctypes.create_string_buffer(97),  # too long
]

invalid_recoverable_signature_length = [
    ctypes.create_string_buffer(64),  # too short
    ctypes.create_string_buffer(66),  # too long
]

invalid_rec_ids = [-1, 4, 5]

valid_seckeys = [
    b'\x97\xe0{\xd6\x7f\xe1\xc52(5\x81\xc9\xfeg_\x8d\x1b0\xecwv\x9a\xf5\xfd\xae\t\xf0y\xdc\x19Z\xde',
    b"\xd4\x8c\x88Q/\x15\xc6(\xc6\x11\xaeU\xd0\xb5`\x9b\xcfcZ1'\xec\x83S\x08\x82\x9c:\xce2\xdc\x81",
    b'\x1e\xfa\x14\xd7*\xdd\x84Me\xf6^p\xcek\xc0\xab\x1d\x07\xb5\xaa\xd9L\x01:\x91SS\x8dS\x0b\x1f\x87',
]
serialized_pubkeys_compressed = [
    b'\x02\x1bY\xc0\xea\xa56Z\r\xbf\x1f8\xff\xc1\x1c\xb1\x9c1\xbe\x9a"\x92\xbd\xcb~\x8f\xb4-\xa3*[\x1e\x93',
    b'\x02\xf0\x08\xb4\xe5\xad\xe1#n\x97\xdc]=\x81\xea\xb7\xbe\x85S\xce\x88\xc5\x08\x1c\xba|\xe8\x11C\xd3\x05\x80)',
    b'\x03Bs\x01a\xce>\x8b\x9dzw\x7fK\x0f\x0cp\x1f5\x7f\xe5<\xbf\xa6p\xbc\xaf\n\xdb\xc4}}\xf7E',
]
serialized_pubkeys = [
    b'\x04\x1bY\xc0\xea\xa56Z\r\xbf\x1f8\xff\xc1\x1c\xb1\x9c1\xbe\x9a"\x92\xbd\xcb~\x8f\xb4-\xa3*[\x1e\x93Ry,/\x94]\x0f\xb5\xbc~\xd8\xb2\xfa`i\xe6\xc7\x042\xaa\x16\xd1G\x17GL(\xae\xd2\xdd&\xd8',
    b"\x04\xf0\x08\xb4\xe5\xad\xe1#n\x97\xdc]=\x81\xea\xb7\xbe\x85S\xce\x88\xc5\x08\x1c\xba|\xe8\x11C\xd3\x05\x80)'\xaa\xecy\x7f\xcdaH\xea\xe1\xff*\xcf\xc0\x01_\xdc\x0f|\x11\x0e,R\x9c\x17\xa5b\xb90&/\x8e",
    b'\x04Bs\x01a\xce>\x8b\x9dzw\x7fK\x0f\x0cp\x1f5\x7f\xe5<\xbf\xa6p\xbc\xaf\n\xdb\xc4}}\xf7Eq9n\x990\x14|\xa4j\xb5v\x81\x18w\xf0\xf1\xa3\xdd\xac\xf2\xf6F\x18$S$\xa2\xcf}l \x8f',
]

not_bytes = [
    None,
    48.12,
    [1, 2],
    {"seckey": b"\x00"},
    {1, 2, 3, 4, 5},
    (None, None, None),
    bytearray([20, 58]),
    78,
]
not_c_char_array = not_bytes + [b"\x01" * 32]
not_int = not_bytes[:-1] + [b"\x01" * 32]
not_bool = not_bytes + [b"\x01" * 32]
